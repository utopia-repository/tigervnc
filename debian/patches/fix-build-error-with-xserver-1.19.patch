Description: Fix build error with xorg xserver 1.19.
 Ideas were taken from
 https://lists.x.org/archives/xorg-devel/2016-October/051495.html
Author: Ola Lundqvist <opal@debian.org>
Index: pkg-tigervnc/unix/xserver/hw/vnc/xorg-version.h
===================================================================
--- pkg-tigervnc.orig/unix/xserver/hw/vnc/xorg-version.h
+++ pkg-tigervnc/unix/xserver/hw/vnc/xorg-version.h
@@ -50,8 +50,10 @@
 #define XORG 117
 #elif XORG_VERSION_CURRENT < ((1 * 10000000) + (18 * 100000) + (99 * 1000))
 #define XORG 118
+#elif XORG_VERSION_CURRENT < ((1 * 10000000) + (19 * 100000) + (99 * 1000))
+#define XORG 119
 #else
-#error "X.Org newer than 1.18 is not supported"
+#error "X.Org newer than 1.19 is not supported"
 #endif
 
 #endif
Index: pkg-tigervnc/unix/xserver117.patch
===================================================================
--- pkg-tigervnc.orig/unix/xserver117.patch
+++ pkg-tigervnc/unix/xserver117.patch
@@ -82,56 +82,3 @@ diff -up xorg-server-1.17.1/mi/miinitext
      {GEExtensionInit, "Generic Event Extension", &noGEExtension},
      {ShapeExtensionInit, "SHAPE", NULL},
  #ifdef MITSHM
-diff -up xorg-server-1.17.1/os/WaitFor.c.vnc xorg-server-1.17.1/os/WaitFor.c
---- xorg-server-1.17.1/os/WaitFor.c.vnc	2015-01-26 18:40:30.000000000 +0000
-+++ xorg-server-1.17.1/os/WaitFor.c	2015-02-13 16:14:05.132516837 +0000
-@@ -125,6 +125,9 @@ static void DoTimer(OsTimerPtr timer, CA
- static void CheckAllTimers(void);
- static volatile OsTimerPtr timers = NULL;
- 
-+extern void vncWriteBlockHandler(fd_set *fds);
-+extern void vncWriteWakeupHandler(int nfds, fd_set *fds);
-+
- /*****************
-  * WaitForSomething:
-  *     Make the server suspend until there is
-@@ -150,6 +153,7 @@ WaitForSomething(int *pClientsReady)
-     INT32 timeout = 0;
-     fd_set clientsReadable;
-     fd_set clientsWritable;
-+    fd_set socketsWritable;
-     int curclient;
-     int selecterr;
-     static int nready;
-@@ -212,6 +216,9 @@ WaitForSomething(int *pClientsReady)
-             XFD_COPYSET(&AllSockets, &LastSelectMask);
-         }
- 
-+        FD_ZERO(&socketsWritable);
-+        vncWriteBlockHandler(&socketsWritable);
-+
-         BlockHandler((void *) &wt, (void *) &LastSelectMask);
-         if (NewOutputPending)
-             FlushAllOutput();
-@@ -223,10 +230,20 @@ WaitForSomething(int *pClientsReady)
-             i = Select(MaxClients, &LastSelectMask, &clientsWritable, NULL, wt);
-         }
-         else {
--            i = Select(MaxClients, &LastSelectMask, NULL, NULL, wt);
-+	    if (AnyClientsWriteBlocked)
-+		XFD_ORSET(&socketsWritable, &ClientsWriteBlocked, &socketsWritable);
-+
-+	    if (XFD_ANYSET(&socketsWritable)) {
-+		i = Select(MaxClients, &LastSelectMask, &socketsWritable, NULL, wt);
-+		if (AnyClientsWriteBlocked)
-+		    XFD_ANDSET(&clientsWritable, &socketsWritable, &ClientsWriteBlocked);
-+	    } else {
-+		i = Select(MaxClients, &LastSelectMask, NULL, NULL, wt);
-+	    }
-         }
-         selecterr = GetErrno();
-         WakeupHandler(i, (void *) &LastSelectMask);
-+	vncWriteWakeupHandler(i, &socketsWritable);
-         if (i <= 0) {           /* An error or timeout occurred */
-             if (dispatchException)
-                 return 0;
